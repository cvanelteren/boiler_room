#+title: The effect of three point interaction in the stability of criminal organizations
#+latex_class: fun_article
#+author: Casper van Elteren,
#+author: Vitor Vasconcelos,
#+author: Mike Lees

* Background
- Criminal organizations form dangers to society and rule of law
- Most criminal studies are performed in an observational capacity
- Theories  are formed  based  on biased  data with  limited
  validation capacity
- There is a lot of  opportunity to use computational models
  to study the consequences of theories in criminal science

* Aim of the study
Produce a computational model rooted in game theory to study
the  emergent  properties  of   success  supply  chain  of
criminal markets in society.

The  goal  is to  come  up  with  a  model of  supply  chain
interactions in  criminal markets and slowly  introduce more
complexities.  Initially,  we  focus the  attention  on  the
interaction of  a criminal supply chain  without competition
in  a  well-mixed  population.  Later, we  can  add  network
effects and effects of rivalry.

Law enforcement is  embedded as an apprehension  cost and can
be represented as heath bath of the system.


* The model
Let $\sigma_i^X \in \{ 0, 1  \} = \{\textrm{do not perform criminal
act}, \textrm{perform criminal act}  \}$ denote the state of
agent $i$ with roles  category $X \in \{ \textrm{Production)},
\textrm{D(istribution)},              \textrm{M(anagement)},
\textrm{C(ivilian)}\}$.  Each agent  has has  a connectivity
structure  according  to  adjacency   matrix  $A$  where  an
non-zero  entry $a_{ij}$  indicates the  connection strength
$a_{ij}  \in \mathbb{R}$  between agent  $i$  and agent  $j$. We  first
consider symmetrical adjacency  matrices and fully connected
graphs without self-connections and  each edge weight having
value  1.  The  roles  of   each  agent  are  assigned  with
probability $p(x  \in X)  = \frac{1}  {| X  |}$, agent  do not
change their role within each  simulation run. The agent can
decide to participate or not in  a criminal act based on the
state of the local connections.

* The pay-off matrix
We  are  interested  in  studying  the  interaction  between
successful criminal supply chains  and citizens. The maximum
pay-off for a criminal organization is to have a functioning
supply chain.  This implies that  there exist a  four point
interaction  between the  roles of  production, distribution
and management; the criminal  organization is most effective
when the product of  interest (drugs, weapons, illegal goods
etc) is readily  available and can be shipped  to and bought
by  customers  (civilians).  A  civilian  can  benefit  from
criminal goods due to a  /need/ of the product, or obtaining
a product at cheaper than market prices.

We   therefore  delineate   the  following   variables.  The
variables are listed as benefits ($b_x$) and costs ($c_x$).
- $b_m$  monetary benefit  of  forming  a complete  criminal
  supply chain (production, distribution, management)
- $b_s$ sales benefit of  forming a complete criminal supply
  chain with customers
- $c_a$ detection cost of committing crime

 #+caption: Supply chain pay-off. Note empty cell indicate no pay-off.
 #+name: table:payoff
 #+attr_latex: :float multicolumn
 | Roles      |              |            |          | Pay-off    |              |                   |          |
 | Production | Distribution | Management | Civilian | Production | Distribution | Management        | Civilian |
 |------------+--------------+------------+----------+------------+--------------+-------------------+----------|
 | C          | C            | C          | C        | $b_s -c_a$ | $b_s -c_a$   | $b_s + b_m - c_a$ | $b_m$    |
 | C          | D            | C          | C        | $-c_a$     |              | $-c_a$            |          |
 | C          | C            | D          | C        | $-c_a$     | $-c_a$       |                   |          |
 | C          | C            | C          | D        | $-c_a$     | $-c_a$       | $-c_a$            |          |
 | C          | D            | D          | C        | $-c_a$     |              |                   |          |
 | C          | D            | D          | D        | $-c_a$     |              |                   |          |
 | C          | D            | C          | C        | $-c_a$     |              | $-c_s$            |          |
 | C          | C            | D          | D        | $-c_a$     | $-c_a$       |                   |          |
 | C          | D            | C          | D        |            |              | -$c_a$            |          |
 | D          | C            | C          | C        |            | $-c_a$       | $-c_a$            |          |
 | D          | D            | C          | C        |            |              | $-c_a$            |          |
 | D          | D            | D          | C        |            |              |                   |          |
 | D          | C            | C          | D        |            | $-c_a$       | $-c_a$            |          |
 | D          | C            | D          | C        |            | $-c_a$       |                   |          |
 | D          | D            | D          | D        |            |              |                   |          |
 | D          | D            | C          | D        |            |              | $c_a$             |          |
 | D          | D            | D          | D        |            |              |                   |          |




* Evolutionary Dynamics
We  evaluate the  evolutionary dynamics  by using  the Fermi
update. Let $x$ denote the  flip probability for an agent of
moving from  strategy $i  \to j$  or vice  versa, then  we can
define the Fermi update as
#+name: fermi-update
\begin{equation}
p(x)_{i \to j} = \frac{1}{1 + \exp(-\beta (E_j- E_i))}
\end{equation}

where  $E_i$  is the  pay-off  or  "energy" of  the  current
strategy  of  an  agent  and $E_j$  the  energy  when  using
strategy $j$. The  $\beta$ parameter denotes the  noise. For low
values the flip probability  approaches one. This represents
the conditions  by which the  agent is highly  influenced by
its environment  and will  adopt strategies  accordingly. In
contrast, high  values of $\beta$ represents  scenarios where an
agent is  making a decision  in a highly  noisy environment,
and their strategy  approaches a random choice  to defect or
conform.

* Simulation
I  start by  spawning  $Z =  100$  agents using  homogeneous
mixing.  From  a  network  perspective this  is  similar  to
connecting  every  agent  with every  other  agent  (no-self
edge).  Using update  rule in  [[table:payoff]], I  start by
simulating for $b_s =  c_a = 1$ with $b_m =  0$. A priori, I
would expect  that the four  point interaction $CCCC$  has a
slight benefit over all other  possible states as there is a
net   negative  for   most  other   configurations  of   the
simulation.  The  conformers  over  time  are  visualize  in
[[fig:conformer_t=1000]]  and a  snapshot  of the  state  per role  is
visualized in [[fig:snapshot_t=1000]]

#+name: setup simulation
#+begin_src jupyter-python
from boiler_room import read_data, make_graph, simulate
config = read_data("./test.csv", beta = 1)

Z, T = 100,500
g = make_graph(Z, config)
states = simulate(t = T, g = g, config = config)
#+end_src

#+name: fig:conformer_t=1000
#+begin_src jupyter-python
import numpy as np, proplot as plt
tmp = np.zeros((len(states), len(config.roles)))
for idx, state in enumerate(states):
    for node in state.nodes():
        s = state.nodes[node]["state"]
        role = state.nodes[node]["role"]
        if s == "C":
            tmp[idx, config.role_map[role]] += 1 / (len(g)//len(config.roles))

fig, ax = plt.subplots()
for data, label in zip(tmp.T, config.roles):
    ax.plot(data, label = label)
ax.format(xlabel = "Time(step)", ylabel = r"Frac. Conformers ($\frac{x}{(Z_{group}}$)")
ax.legend(loc = 'r', ncols = 1)
# ax.set_ylim(0, 1)
# ax.axhline(0.25, ls = "dashed", color = 'lightgray')
ax.set_title(fr"Conformers over time (Z = {Z}, $\beta$={config.beta})")
fig.show()
#+end_src



#+name: fig:snapshot_t=1000
#+begin_src jupyter-python
%load_ext autoreload
%autoreload 2
import networkx as nx, proplot as plt
from boiler_room import plot_graph

markers = "os^v"
colors = ["steelblue", "red"]
pos = nx.kamada_kawai_layout(g)
fig, (left, right) = plt.subplots(ncols = 2)

plot_graph(states[0], ax = left, config = config, markers = markers, colors = colors)
plot_graph(states[T-1], ax = right, config = config, markers = markers, colors = colors)

left.set_title("T = 0")
right.set_title(f"T = {T-1}")

fig.format(grid = False)
labels = [plt.pyplot.Line2D([], [], marker = marker,
                      ls = "none", label = label, color = "k") for marker, label in zip(markers, config.roles)]
state_marker = [plt.pyplot.Line2D([], [], marker = "o",
                      ls = "none", label = label, color = color) for color, label in zip(colors,"C D".split())]
fig.legend(handles = labels, loc = "t")
fig.legend(handles = state_marker, loc = "b")
fig.show()
#+end_src
#+RESULTS: fig:snapshot_t=1000
:RESULTS:
: The autoreload extension is already loaded. To reload it, use:
:   %reload_ext autoreload
: /tmp/ipykernel_26640/4277905585.py:24: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.
:   fig.show()
#+attr_org: :width 525 :height 375
[[file:./.ob-jupyter/035d9adc5c9081d9617f9279ed5ce0cd5576016a.png]]
:END:

#+begin_src jupyter-python
import proplot as plt, numpy as np
e = np.linspace(-10, 10)
p = 1 / (1 + np.exp(-e))

fig, ax = plt.subplots()
ax.plot(e, p)
ax.format(xlabel = "E", ylabel = "P(E)")
fig.show()
#+end_src

#+RESULTS:
:RESULTS:
: /tmp/ipykernel_31414/2173492732.py:8: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.
:   fig.show()
#+attr_org: :width 312 :height 300
[[file:./.ob-jupyter/25058265cb746466bc0045b9dca37e7e077409e3.png]]
:END:

- change payoff to the fractions of the individuals
- Show dynamics of the simple game.
- Custer roles
- keep payoff simple
- risk proportional to your degree?
